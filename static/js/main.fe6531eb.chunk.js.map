{"version":3,"sources":["projects/taeyoung_erp_img.png","projects/movie_app.png","projects/youtube_mobile.png","projects/black_note.png","components/Navbar.tsx","components/Home.tsx","components/About.tsx","components/Hexagon.tsx","components/ProgressBar.tsx","components/Skills.tsx","components/Project.tsx","components/CategoryBtn.tsx","components/Modal.tsx","components/Work.tsx","components/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","props","setResizeEvent","window","addEventListener","setState","isResize","state","changeLiText","this","id","className","React","Component","mq","matchMedia","matches","ul","document","querySelector","Array","from","children","forEach","li","textContent","Home","About","listElements","querySelectorAll","selectElement","index","setActive","bindingContent","value","e","target","selectedIndex","element","classList","remove","add","lis","clickedElement","text","ele","p","Hexagon","icon","h2","h4","split","map","line","key","ProgressBar","clas","title","per","style","width","Skills","Project","dataType","img","clasName","data-type","src","alt","CategoryBtn","bindingEventToBtn","count","dataFilter","data-filter","btn","event","activeBtn","t","ctgrBtn","nodeName","parentElement","Modal","taeyoungImg","href","blackNoteImg","movieAppImg","youtubeMobileImg","Work","openModal","modal","project","replace","modalContent","activeModal","closeModal","closeBtn","filterProjects","projectContainer","projects","filter","getAttribute","type","setTimeout","Contact","App","beforeSec","SE","getSectionsElement","NavBtnElements","sec","getCurrentSection","getPosition","attachNavbar","section","goTo","top","getBoundingClientRect","pageYOffset","scrollTo","behavior","nav","pageY","gp","home","about","skills","work","direction","contact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fe6531eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/taeyoung_erp_img.8a7c34ad.png\";","module.exports = __webpack_public_path__ + \"static/media/movie_app.fe516973.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube_mobile.b03fc49a.png\";","module.exports = __webpack_public_path__ + \"static/media/black_note.da81fe71.png\";","import React from \"react\";\nimport \"../style/navbar.scss\";\n\ninterface NavProps {}\ninterface NavState {\n  [key: string]: boolean;\n  isResize: boolean;\n}\n\nclass Navbar extends React.Component<NavProps, NavState> {\n  constructor(props: NavProps) {\n    super(props);\n    this.state = {\n      isResize: false,\n    };\n  }\n\n  /**\n   * * setResizeEvent\n   * * : 화면크기 변경시 state값을 변경한다.\n   * @return void\n   */\n  setResizeEvent = (): void => {\n    window.addEventListener(\"resize\", () => {\n      this.setState({ isResize: true });\n    });\n  };\n\n  componentDidMount() {\n    changeLiText();\n    this.setResizeEvent();\n  }\n\n  componentDidUpdate() {\n    changeLiText();\n  }\n\n  render() {\n    return (\n      <nav id='navbar' className='notFixed'>\n        <div className='navbar__menu'>\n          <ul>\n            <li id='nav__home' className='nav__btn active'>\n              Home\n            </li>\n            <li id='nav__about' className='nav__btn'>\n              About\n            </li>\n            <li id='nav__skills' className='nav__btn'>\n              Skills\n            </li>\n            <li id='nav__work' className='nav__btn'>\n              My Work\n            </li>\n            <li id='nav__contact' className='nav__btn'>\n              Contact\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\n/**\n * * changeLiText\n * * : 브라우저 사이즈가 변경되면 li text를 수정한다.\n * @return void\n */\nexport const changeLiText = (): void => {\n  const mq = window.matchMedia(\"(max-width: 620px)\").matches;\n  const ul = document.querySelector(\".navbar__menu ul\") as HTMLUListElement;\n  const lis = Array.from(ul.children);\n\n  lis.forEach((li) => {\n    switch (li.id) {\n      case \"nav__home\":\n        li.textContent = mq ? \"H\" : \"Home\";\n        break;\n      case \"nav__about\":\n        li.textContent = mq ? \"A\" : \"About\";\n        break;\n      case \"nav__skills\":\n        li.textContent = mq ? \"S\" : \"Skills\";\n        break;\n      case \"nav__work\":\n        li.textContent = mq ? \"W\" : \"Work\";\n        break;\n      case \"nav__contact\":\n        li.textContent = mq ? \"C\" : \"Contact\";\n        break;\n    }\n  });\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport \"../style/home.scss\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <section id='home'>\n        <div className='home__container'>\n          <div className='home__title'>\n            Full stack web developer.\n            <br />\n            최종호\n          </div>\n          <div id='goTo__about' className={\"home__button nav__btn\"}>\n            View my work <i className='fas fa-arrow-right'></i>\n          </div>\n        </div>\n        <Navbar />\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../style/about.scss\";\n\nclass About extends React.Component {\n  componentDidMount() {\n    const listElements = document.querySelectorAll(\".about__menu-text li\") as NodeListOf<Element>;\n    const selectElement = document.querySelector(\".about__menu-select\") as HTMLSelectElement;\n\n    // li click 이벤트 바인딩\n    listElements.forEach((li, index) => {\n      li.addEventListener(\"click\", () => {\n        setActive(li, listElements);\n        bindingContent(listElements, li);\n        //select box 의 선택된 값을 변경한다.\n        selectElement.value = index + \"\";\n      });\n    });\n\n    // select box click 이벤트 바인딩\n    selectElement.addEventListener(\"change\", (e) => {\n      const target = e.target as HTMLSelectElement;\n      const index = target.selectedIndex;\n      // 선택된 select box 의 값에 해당하는 li 요소를 변수에 할당한다.\n      const li = listElements[index];\n      setActive(li, listElements);\n      bindingContent(listElements, li);\n    });\n  }\n\n  render() {\n    return (\n      <section id='about'>\n        <h1 className='about__h1'>About Me</h1>\n        <p>현재 서울 관악구 신림동에 거주중입니다.</p>\n        <div className='about__container'>\n          <ul className='about__menu-text'>\n            <li className='li_active'>2014 ~ 2015 : 학원 수료</li>\n            <li>2015 ~ 2016 : 회사 뉴테크 근무</li>\n            <li>2016 ~ 2019 : 타 직업 종사</li>\n            <li>2019 ~ 2020 : ERP 프로젝트</li>\n            <li>2020 ~ </li>\n          </ul>\n\n          <select className='about__menu-select'>\n            <option value='0'>2014 ~ 2015 : 학원 수료</option>\n            <option value='1'>2015 ~ 2016 : 회사 뉴테크 근무</option>\n            <option value='2'>2016 ~ 2019 : 타 직업 종사</option>\n            <option value='3'>2019 ~ 2020 : ERP 프로젝트</option>\n            <option value='4'>2020 ~ </option>\n          </select>\n\n          <div id='content' className='about__detail'>\n            <p>약 6개월, 비트컴퓨터 학원 수료했습니다.</p>\n\n            <p className='ct_deactive'>\n              1년간 여러가지 업무를 했지만\n              <br /> 딱히 기억나는것도 없고 실력도 별로였습니다.\n              <br /> 경영악화로 퇴사했습니다.\n            </p>\n\n            <p className='ct_deactive'>\n              간간히 책을 읽으면서\n              <br />\n              레노버 콜센터에서 3개월\n              <br /> 인조대리석 1년\n              <br /> 구매자재팀에서 창고관리 1년\n              <br /> 그렇게 일해보니 개발일이 저에게 제일 잘 맞았다고 생각됐습니다.\n            </p>\n\n            <p className='ct_deactive'>\n              인력파견업체에 취직하였습니다.\n              <br />\n              그리고 6년차 과장으로 태영건설에 파견되었습니다.\n              <br />\n              2019년 4월부터 2020년 4월까지 1년 1개월동안\n              <br />\n              차세대 ERP 프로젝트에서 구매자재 업무 중 구매를 담당했습니다.\n            </p>\n\n            <p className='ct_deactive'>\n              프로젝트 철수 후, 한달동안 구직활동을 했습니다.\n              <br />\n              붙은곳도 있었고 입사해서 1주일동안 일하기도 했습니다.\n              <br />\n              그런데 지금까지 나온 새로운 기술들도 많았고 자바만 계속 하긴 싫었습니다.\n              <br />\n              그래서 현재는 프론트엔드 개발자로 일하기 위해 React로 이것저것 만들어보는 중입니다.\n            </p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\n/**\n * * setActive\n * * : 매개변수로 받은 element을 활성화시킨다.\n * @param target\n * @param liElement\n * @return void\n */\nexport const setActive = (target: Element, listElements: NodeListOf<Element>): void => {\n  listElements.forEach((element) => {\n    element.classList.remove(\"li_active\");\n  });\n  target.classList.add(\"li_active\");\n};\n\n/**\n * * bindingContent\n * * : 매개변수로 전달된 li와 매칭되는 p태그의 display 속성을 바꾼다.\n * @param element\n * @param lis\n * @param clickedElement\n * @return void\n */\nexport const bindingContent = (lis: NodeListOf<Element>, clickedElement: Element): void => {\n  const text = clickedElement.textContent;\n  lis.forEach((ele, index) => {\n    const p = document.querySelectorAll(\".about__detail p\");\n    if (ele.textContent === text) {\n      p[index].classList.remove(\"ct_deactive\");\n    } else {\n      p[index].classList.add(\"ct_deactive\");\n    }\n  });\n};\n\nexport default About;\n","import React from \"react\";\nimport \"../style/hexagon.scss\";\n\ninterface iProps {\n  [key: string]: string;\n  icon: string;\n  h2: string;\n  h4: string;\n}\nclass Hexagon extends React.Component<iProps> {\n  render() {\n    return (\n      <div className='hex_wrap1'>\n        <div className='hex_wrap'>\n          <div className='hexagon'>\n            <i className={`${this.props.icon} hexagon__icon`}></i>\n          </div>\n        </div>\n        <h2 className='skills__h2'>{this.props.h2}</h2>\n        <h4 className='skills__h4'>\n          {/* h4의 문자열에 \\n가 포함되어 있을 경우 줄바꿈 해준다. */}\n          {this.props.h4.split(\"\\\\n\").map((line, index) => {\n            return (\n              <span key={index}>\n                {line}\n                <br />\n              </span>\n            );\n          })}\n        </h4>\n      </div>\n    );\n  }\n}\nexport default Hexagon;\n","import React from \"react\";\nimport \"../style/progressbar.scss\";\n\ninterface iProps {\n  [key: string]: string;\n  title: string;\n  per: string;\n  clas: string;\n}\nclass ProgressBar extends React.Component<iProps> {\n  render() {\n    return (\n      <div className='skills__one_set'>\n        <div className='skills__description'>\n          <span className={this.props.clas}>{this.props.title}</span>\n          <span>{this.props.per}</span>\n        </div>\n        <div className='skills__bar'>\n          <div className='skills__value' style={{ width: this.props.per }}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBar;\n","import React from \"react\";\nimport Hexagon from \"./Hexagon\";\nimport ProgressBar from \"./ProgressBar\";\nimport \"../style/skills.scss\";\n\nclass Skills extends React.Component {\n  render() {\n    return (\n      <section id='skills'>\n        <h1 className='skills__h1'>Skills</h1>\n        <div className='hex_wrap3'>\n          <div className='hex_wrap2'>\n            <Hexagon icon='fab fa-html5' h2='HTML' h4='HTML,\\n CSS' />\n            <Hexagon icon='fab fa-react' h2='FrontEnd' h4='Javascript, React,\\n Typescript' />\n          </div>\n\n          <div className='hex_wrap2'>\n            <Hexagon\n              icon='fas fa-leaf'\n              h2='Java'\n              h4='Java, Spring, Servlet,\\n Jsp, Mybatis, Maven'\n            />\n            <Hexagon icon='fas fa-server' h2='DBMS' h4='Oracle, MySql,\\n Stored Procedure' />\n          </div>\n        </div>\n\n        <div className='skills__container'>\n          <div className='skills__progress'>\n            <h3 className='skills__h3'>Skills</h3>\n            <ProgressBar title='HTML' per='72%' clas='' />\n            <ProgressBar title='CSS' per='62%' clas='' />\n            <ProgressBar title='ES5 / ES6 / TypeScript' per='75%' clas='' />\n            <ProgressBar title='React' per='70%' clas='' />\n            <ProgressBar title='Java / Spring' per='80%' clas='' />\n            <ProgressBar title='SQL' per='70%' clas='' />\n          </div>\n          <div className='skills__right-wrap'>\n            <div className='skills__detail'>\n              <div className='skills__detail-wrap'>\n                <h3 className='skills__h3'>Tools</h3>\n                <ul>\n                  <li>VSCode</li>\n                  <li>STS</li>\n                  <li>DBeaver</li>\n                  <li></li>\n                </ul>\n              </div>\n            </div>\n            <div className='skills__tools'>\n              <div className='skills__detail-wrap'>\n                <h3 className='skills__h3'>ETC</h3>\n                <ul>\n                  <li>Git</li>\n                  <li></li>\n                  <li></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nexport default Skills;\n","import React from \"react\";\nimport \"../style/project.scss\";\n\ninterface iProps {\n  [key: string]: string;\n  img: string;\n  dataType: string;\n  clasName: string;\n  title: string;\n  value: string;\n}\n\nclass Project extends React.Component<iProps> {\n  componentDidMount() {}\n\n  render() {\n    const { dataType, img, clasName, title, value } = this.props;\n    return (\n      <div className={`project ${clasName}`} data-type={dataType}>\n        <img src={img} alt='' className={`project__img ${clasName}`} />\n        <div className={`project__description ${clasName}`}>\n          <h3 className={`dummy ${clasName}`}>{title}</h3>\n          <br />\n          <span className={`dummy ${clasName}`}>{value}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React from \"react\";\nimport \"../style/categorybtn.scss\";\n\ninterface iProps {\n  [key: string]: string | number;\n  text: string;\n  count: number;\n  clas: string;\n  dataFilter: string;\n}\nclass CategoryBtn extends React.Component<iProps, {}> {\n  componentDidMount() {\n    bindingEventToBtn();\n  }\n  render() {\n    const { text, count, clas, dataFilter } = this.props;\n    return (\n      <button className={`category__btn ${clas}`} data-filter={dataFilter}>\n        {text}\n        <span className='category__count'>{count}</span>\n      </button>\n    );\n  }\n}\n\n/**\n * * bindingEventToBtn\n * * : 카테고리 버튼 이벤트 바인딩\n * @return void\n */\nexport const bindingEventToBtn = (): void => {\n  const btnArr = document.querySelectorAll(\".category__btn, .category__count\");\n\n  // category button click event binding\n  btnArr.forEach((btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      const activeBtn = document.querySelector(\".category__btn.active\");\n      const t = event.target as Element;\n      // 클릭한 노드가 span 일 경우 제대로 작동 안하는걸 방지하기 위함\n      const ctgrBtn = t.nodeName === \"SPAN\" ? t.parentElement : t;\n\n      // button 활성화 / 비활성화\n      if (activeBtn) activeBtn.classList.remove(\"active\");\n      if (ctgrBtn) ctgrBtn.classList.add(\"active\");\n    });\n  });\n};\n\nexport default CategoryBtn;\n","import React from \"react\";\nimport \"../style/modal.scss\";\nimport taeyoungImg from \"../projects/taeyoung_erp_img.png\";\nimport movieAppImg from \"../projects/movie_app.png\";\nimport youtubeMobileImg from \"../projects/youtube_mobile.png\";\nimport blackNoteImg from \"../projects/black_note.png\";\n\nclass Modal extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div className='modal'>\n        {/* Modal content */}\n        <div className='modal__content'>\n          <div className='modal__header'>\n            <span className='close'>&times;</span>\n          </div>\n\n          <div className='modal__body modal__taeyoung deactive'>\n            <div className='modal__img-wrap'>\n              <img src={taeyoungImg} alt='' className='modal__img' />\n            </div>\n            <article>\n              <ul>\n                <li>태영건설 차세대 ERP 프로젝트</li>\n                <br />\n                <li>개발기간 : 2019.04~2020.04(1년 1개월)</li>\n                <li>담당업무 : 구매자재 부서의 구매업무(입찰, 계약 등) 담당</li>\n                <li>기술스펙 : ES5, Spring framework, </li>\n                <li>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  oracle stored procedure\n                </li>\n                <br />\n                <li>약 30개의 화면 개발 중 세부기능사항 : </li>\n                <li>1. 공인인증서 적용</li>\n                <li>2. 파일 업, 다운로드</li>\n                <li>3. 동적 피벗 쿼리 적용</li>\n                <li>4. 원본 rtf파일과 정보를 조합하여 pdf파일(계약서) 생성</li>\n                <li>5. 입찰정보를 엑셀파일을 업로드하여 입력받는 기능</li>\n                <li>6. 입찰정보를 엑셀파일로 다운로드하는 기능</li>\n                <li>7. 보고서 출력기능</li>\n                <li>8. 전자결재</li>\n                <li>9. 보증서</li>\n                <li>10. 인지세</li>\n              </ul>\n              <span className='modal__icons'>\n                <a href='https://erp.taeyoung.com/' target='_blank'>\n                  <i className='fas fa-link'></i>\n                </a>\n              </span>\n            </article>\n          </div>\n\n          <div className='modal__body modal__blackNote deactive'>\n            <div className='modal__img-wrap'>\n              <img src={blackNoteImg} alt='' className='modal__img' />\n            </div>\n            <article>\n              <ul>\n                <li>Black Note front-end</li>\n                <br />\n                <li>개발기간 : 2019, 약 6개월</li>\n                <li>기술스펙 : Html, Css, ES5, BootStrap </li>\n                <br />\n                <li>남는 시간에 틈틈히 개발했던 웹앱입니다.</li>\n                <li>미완성</li>\n              </ul>\n              <span className='modal__icons'>\n                <a href='https://emtete.github.io/black_note/' target='_blank'>\n                  <i className='fas fa-link'></i>\n                </a>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <a href='https://github.com/emtete/black_note' target='_blank'>\n                  <i className='fab fa-github-square'></i>\n                </a>\n              </span>\n            </article>\n          </div>\n\n          <div className='modal__body modal__movieApp deactive'>\n            <div className='modal__img-wrap'>\n              <img src={movieAppImg} alt='' className='modal__img' />\n            </div>\n            <article>\n              <ul>\n                <li>Movie App front-end</li>\n                <br />\n                <li>개발기간 : 2020.05, 약 1주일</li>\n                <li>기술스펙 : React, ES6, TypeScript, Axios </li>\n              </ul>\n              <span className='modal__icons'>\n                <a href='https://emtete.github.io/movie_app/' target='_blank'>\n                  <i className='fas fa-link'></i>\n                </a>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <a href='https://github.com/emtete/movie_app' target='_blank'>\n                  <i className='fab fa-github-square'></i>\n                </a>\n              </span>\n            </article>\n          </div>\n\n          <div className='modal__body modal__youtubeMobile deactive'>\n            <div className='modal__img-wrap'>\n              <img src={youtubeMobileImg} alt='' className='modal__img' />\n            </div>\n            <article>\n              <ul>\n                <li>Youtube Mobile front-end</li>\n                <br />\n                <li>개발기간 : 2020.05, 약 1주일</li>\n                <li>기술스펙 : HTML, CSS, ES6, FlexBox, 반응형</li>\n              </ul>\n              <span className='modal__icons'>\n                <a href='https://emtete.github.io/youtube_mobile/' target='_blank'>\n                  <i className='fas fa-link'></i>\n                </a>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <a href='https://github.com/emtete/youtube_mobile' target='_blank'>\n                  <i className='fab fa-github-square'></i>\n                </a>\n              </span>\n            </article>\n          </div>\n\n          <div className='modal__footer'></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport Project from \"./Project\";\nimport CtgyBtn from \"./CategoryBtn\";\nimport Modal from \"./Modal\";\nimport taeyoungImg from \"../projects/taeyoung_erp_img.png\";\nimport movieAppImg from \"../projects/movie_app.png\";\nimport youtubeMobileImg from \"../projects/youtube_mobile.png\";\nimport blackNoteImg from \"../projects/black_note.png\";\nimport \"../style/work.scss\";\n\ninterface WorkState {\n  [key: string]: string;\n}\n\ninterface Props {}\n\nclass Work extends React.Component<{}, WorkState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeModal: \"\",\n    };\n  }\n\n  componentDidMount() {\n    filterProjects();\n    this.openModal();\n    this.closeModal();\n  }\n\n  /**\n   * * openModal\n   * * : modal을 연다\n   * @return void\n   */\n  openModal = (): void => {\n    const modal = document.querySelector(\".modal\");\n    const projects = document.querySelectorAll(\".project\");\n\n    // project click event binding\n    projects.forEach((project) => {\n      project.addEventListener(\"click\", (e) => {\n        const clasName = (e.target as Element).className.split(\" \")[1].replace(\"project\", \"modal\");\n        const modalContent = document.querySelector(`.${clasName}`);\n        this.setState({ activeModal: clasName });\n\n        // modal, modalContent 활성화\n        modal?.classList.add(\"active\");\n        modalContent?.classList.remove(\"deactive\");\n      });\n    });\n  };\n\n  /**\n   * * closeModal\n   * * : modal을 닫는다.\n   * @return void\n   */\n  closeModal = (): void => {\n    const closeBtn = document.querySelector(\".modal .close\");\n    const modal = document.querySelector(\".modal\");\n\n    // close button click event binding\n    closeBtn?.addEventListener(\"click\", (e) => {\n      const clasName = this.state.activeModal;\n      const modalContent = document.querySelector(`.${clasName}`);\n\n      // modal, modalContent 비활성화\n      modal?.classList.remove(\"active\");\n      modalContent?.classList.add(\"deactive\");\n    });\n  };\n\n  render() {\n    return (\n      <section id='work'>\n        <Modal />\n        <div className='work__h1'>My Works</div>\n        <div className='work__categories'>\n          <CtgyBtn text='All' count={4} clas='active' dataFilter='*' />\n          <CtgyBtn text='Projects' count={1} clas='' dataFilter='Projects' />\n          <CtgyBtn text='Sub Projects' count={1} clas='' dataFilter='Sub Projects' />\n          <CtgyBtn text='etc' count={2} clas='' dataFilter='etc' />\n        </div>\n        <div className='work__projects'>\n          <Project\n            clasName='project__taeyoung'\n            img={`${taeyoungImg}`}\n            dataType='Projects'\n            title='태영건설 차세대 ERP프로젝트'\n            value=''\n          />\n          <Project\n            clasName='project__blackNote'\n            img={`${blackNoteImg}`}\n            dataType='Sub Projects'\n            title='Black Note'\n            value='Note Web App'\n          />\n          <Project\n            clasName='project__movieApp'\n            img={`${movieAppImg}`}\n            dataType='etc'\n            title='Movie App'\n            value='front-end clone coding'\n          />\n          <Project\n            clasName='project__youtubeMobile'\n            img={`${youtubeMobileImg}`}\n            dataType='etc'\n            title='Youtube Mobile'\n            value='front-end clone coidng'\n          />\n        </div>\n      </section>\n    );\n  }\n}\n\n/**\n * * filterProjects\n * * : 카테고리에 맞는 프로젝트를 노출시킨다.\n * @return void\n */\nexport const filterProjects = (): void => {\n  const projectContainer = document.querySelector(\".work__projects\");\n  const projects = document.querySelectorAll(\".project\");\n  const btns = document.querySelector(\".work__categories\");\n\n  btns!.addEventListener(\"click\", (e) => {\n    const target = e.target as HTMLElement;\n    const filter =\n      target.getAttribute(\"data-filter\") || target?.parentElement?.getAttribute(\"data-filter\");\n\n    if (filter === null) return;\n\n    projectContainer?.classList.add(\"anime-out\");\n    projects.forEach((project) => {\n      const type = project.getAttribute(\"data-type\");\n      if (filter !== type && filter !== \"*\") {\n        project.classList.add(\"deactive\");\n      } else {\n        project.classList.remove(\"deactive\");\n      }\n    });\n\n    setTimeout(() => {\n      projectContainer?.classList.remove(\"anime-out\");\n    }, 300);\n  });\n};\n\nexport default Work;\n","import React from \"react\";\nimport \"../style/contact.scss\";\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <section id='contact'>\n        <h1 className='contact__title'>CONTACT</h1>\n        <h2 className='contact__email'>victor_77@naver.com</h2>\n        <div className='contact__icons'>\n          <a href='https://github.com/emtete' target='_blank'>\n            <i className='fab fa-github-square'></i>\n          </a>\n        </div>\n        <span className='contact__copylight'>2020 choi jongho - All right reserved</span>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Skills from \"./components/Skills\";\nimport Work from \"./components/Work\";\nimport Contact from \"./components/Contact\";\nimport \"./style/initialization.scss\";\n\ntype Elements = {\n  [key: string]: HTMLElement;\n};\n\ninterface iProps {}\ninterface iState {\n  [key: string]: string;\n  beforeSec: string;\n}\n\nclass App extends React.Component<iProps, iState> {\n  constructor(props: iProps) {\n    super(props);\n    this.state = {\n      beforeSec: \"home\",\n    };\n  }\n\n  componentDidMount() {\n    const SE = getSectionsElement();\n    const NavBtnElements = document.querySelectorAll(\".nav__btn\");\n\n    // scroll 이벤트 바인딩\n    window.addEventListener(\"scroll\", () => {\n      const sec = getCurrentSection(SE, getPosition);\n      const { beforeSec } = this.state;\n\n      if (sec !== beforeSec) {\n        this.setState({ beforeSec: sec });\n        attachNavbar(sec, SE);\n        setActive(sec, SE);\n      }\n    });\n\n    // Nav btn Click 이벤트 바인딩\n    NavBtnElements.forEach((element) => {\n      element.addEventListener(\"click\", (e) => {\n        const section = element.id.split(\"__\")[1];\n        goTo(section, SE);\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Home />\n        <About />\n        <Skills />\n        <Work />\n        <Contact />\n      </div>\n    );\n  }\n}\n\n/**\n * * goTo\n * * : 매개변수로 입력받은 section(home, navbar ..)로 이동시킨다.\n * @param section\n * @param SE\n * @return void\n */\nexport const goTo = (section: string, SE: Elements): void => {\n  const top: number = SE[section]!.getBoundingClientRect().top + window.pageYOffset - 50;\n\n  window.scrollTo({\n    top: top,\n    behavior: \"smooth\",\n  });\n};\n\n/**\n * * attachNavbar\n * * : 스크롤이 홈 영역 밖에 있을 때, 네비게이션 바를 화면 상단에 고정한다.\n * @param SE\n * @param sec\n * @return void\n */\nexport const attachNavbar = (sec: string, SE: Elements): void => {\n  if (sec !== \"home\" && SE.nav !== null) {\n    SE.nav.classList.add(\"fixed\");\n    SE.nav.classList.remove(\"notFixed\");\n  } else if (sec === \"home\" && SE.nav !== null) {\n    SE.nav.classList.remove(\"fixed\");\n    SE.nav.classList.add(\"notFixed\");\n  }\n};\n\n/**\n * * setActive\n * * : 매개변수로 받은 section을 활성화시킨다.\n * @param SE\n * @param sec\n * @return void\n */\nexport const setActive = (sec: string, SE: Elements): void => {\n  const navList: Array<Element> = Array.from((SE.nav?.querySelector(\"ul\") as any).children);\n  navList.forEach((element) => {\n    const target = element.id.split(\"__\")[1];\n    element.classList.remove(\"active\");\n    if (sec === target) element.classList.add(\"active\");\n  });\n};\n\n/**\n * * getCurrentSection\n * * : 현재 스크롤이 있는 섹션을 리턴한다.\n * @param SE\n * @param getPosition\n * @return string\n */\nexport const getCurrentSection = (SE: Elements, getPosition: Function): string => {\n  const pageY = window.pageYOffset;\n  const gp = getPosition;\n  let sec: string;\n\n  if (pageY < gp(SE.home!, \"bottom\") - 53) {\n    sec = \"home\";\n  } else if (gp(SE.home!, \"bottom\") - 54 < pageY && pageY < gp(SE.about!, \"bottom\") - 53) {\n    sec = \"about\";\n  } else if (gp(SE.about!, \"bottom\") - 53 < pageY && pageY < gp(SE.skills!, \"bottom\") - 53) {\n    sec = \"skills\";\n  } else if (gp(SE.skills!, \"bottom\") - 53 < pageY && pageY < gp(SE.work!, \"bottom\") - 553) {\n    sec = \"work\";\n  } else {\n    sec = \"contact\";\n  }\n\n  return sec;\n};\n\n/**\n * * getPosition\n * * : 매개변수로 받은 element의 top | bottom Y 좌표를 리턴한다.\n * @param element\n * @param direction\n * @return number\n */\nexport const getPosition = (element: Element, direction: string & (\"bottom\" | \"top\")): number => {\n  const bcr = element.getBoundingClientRect();\n  return bcr[direction] + window.pageYOffset;\n};\n\n/**\n * * getSectionsElement\n * * : 각 섹션의 Html Element를 담은 객체를 반환한다.\n * @param element\n * @return Elements\n */\nexport const getSectionsElement = (): Elements => {\n  const SE: Elements = {\n    home: document.querySelector(\"#home\") as HTMLElement,\n    nav: document.querySelector(\"#navbar\") as HTMLElement,\n    about: document.querySelector(\"#about\") as HTMLElement,\n    skills: document.querySelector(\"#skills\") as HTMLElement,\n    work: document.querySelector(\"#work\") as HTMLElement,\n    contact: document.querySelector(\"#contact\") as HTMLElement,\n  };\n  return SE;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}